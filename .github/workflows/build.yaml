on:
  workflow_dispatch:
  schedule:
    - cron: "0 11 * * *"

name: Build dev binaries

env:
  FLUTTER_VERSION: 3.16.0
  XCODE_VERSION: ^15.0.1

jobs:
  build-app:
    name: Build app
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: android
            runner: ubuntu-latest
          - os: ios
            runner: macos-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: deps-${{ hashFiles('**/pubspec.lock') }} # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "ruby"
          bundler-cache: true
          working-directory: ${{ matrix.os }}

      - name: Setup Firebase env
        env:
          FIREBASE_ENV: ${{ secrets.FIREBASE_ENV }}
        run: ./scripts/setup-firebase.sh

      - name: Setup Java
        if: matrix.os == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Select Xcode version
        if: matrix.os == 'ios'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup iOS environment
        if: matrix.os == 'ios'
        run: ../scripts/setup-ios.sh
        working-directory: ${{ matrix.os }}

      - name: Run prebuild
        run: ./scripts/prebuild.sh

      - name: Build
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APPLE_CERTIFICATES_SSH_KEY: ${{ secrets.APPLE_CERTIFICATES_SSH_KEY }}
        run: ../scripts/build-dev.sh
        working-directory: ${{ matrix.os }}

      - name: Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export SONAR_SCANNER_VERSION=6.1.0.4477
          export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          export PATH=$SONAR_SCANNER_HOME/bin:$PATH
          export SONAR_SCANNER_OPTS="-server"
          sonar-scanner \
            -Dsonar.organization=leveretka \
            -Dsonar.projectKey=leveretka_Kazumi \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.c.file.suffixes=- \
            -Dsonar.cpp.file.suffixes=- \
            -Dsonar.objc.file.suffixes=- \
            -Dsonar.verbose=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tmail-dev-${{ matrix.os }}
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            ios/Runner.ipa
